{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'primeng/api';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { UniqueComponentId, ZIndexUtils, ObjectUtils } from 'primeng/utils';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { trigger, state, style, transition, animate, query, animateChild } from '@angular/animations';\nconst _c0 = [\"container\"];\n\nconst _c1 = function (a0, a1, a2, a3) {\n  return {\n    \"pi-info-circle\": a0,\n    \"pi-exclamation-triangle\": a1,\n    \"pi-times-circle\": a2,\n    \"pi-check\": a3\n  };\n};\n\nfunction ToastItem_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 6);\n    i0.ɵɵelementStart(2, \"div\", 7)(3, \"div\", 8);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 9);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(\"p-toast-message-icon pi\" + (ctx_r1.message.icon ? \" \" + ctx_r1.message.icon : \"\"));\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(5, _c1, ctx_r1.message.severity == \"info\", ctx_r1.message.severity == \"warn\", ctx_r1.message.severity == \"error\", ctx_r1.message.severity == \"success\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.message.summary);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.message.detail);\n  }\n}\n\nfunction ToastItem_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction ToastItem_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ToastItem_button_5_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onCloseIconClick($event);\n    })(\"keydown.enter\", function ToastItem_button_5_Template_button_keydown_enter_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onCloseIconClick($event);\n    });\n    i0.ɵɵelement(1, \"span\", 11);\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c2 = function (a0) {\n  return [a0, \"p-toast-message\"];\n};\n\nconst _c3 = function (a0, a1, a2, a3) {\n  return {\n    showTransformParams: a0,\n    hideTransformParams: a1,\n    showTransitionParams: a2,\n    hideTransitionParams: a3\n  };\n};\n\nconst _c4 = function (a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\n\nconst _c5 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction Toast_p_toastItem_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-toastItem\", 3);\n    i0.ɵɵlistener(\"onClose\", function Toast_p_toastItem_2_Template_p_toastItem_onClose_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onMessageClose($event);\n    })(\"@toastAnimation.start\", function Toast_p_toastItem_2_Template_p_toastItem_animation_toastAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onAnimationStart($event);\n    })(\"@toastAnimation.done\", function Toast_p_toastItem_2_Template_p_toastItem_animation_toastAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.onAnimationEnd($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const msg_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"message\", msg_r2)(\"index\", i_r3)(\"template\", ctx_r1.template)(\"@toastAnimation\", undefined)(\"showTransformOptions\", ctx_r1.showTransformOptions)(\"hideTransformOptions\", ctx_r1.hideTransformOptions)(\"showTransitionOptions\", ctx_r1.showTransitionOptions)(\"hideTransitionOptions\", ctx_r1.hideTransitionOptions);\n  }\n}\n\nclass ToastItem {\n  constructor(zone) {\n    this.zone = zone;\n    this.onClose = new EventEmitter();\n  }\n\n  ngAfterViewInit() {\n    this.initTimeout();\n  }\n\n  initTimeout() {\n    if (!this.message.sticky) {\n      this.zone.runOutsideAngular(() => {\n        this.timeout = setTimeout(() => {\n          this.onClose.emit({\n            index: this.index,\n            message: this.message\n          });\n        }, this.message.life || 3000);\n      });\n    }\n  }\n\n  clearTimeout() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n      this.timeout = null;\n    }\n  }\n\n  onMouseEnter() {\n    this.clearTimeout();\n  }\n\n  onMouseLeave() {\n    this.initTimeout();\n  }\n\n  onCloseIconClick(event) {\n    this.clearTimeout();\n    this.onClose.emit({\n      index: this.index,\n      message: this.message\n    });\n    event.preventDefault();\n  }\n\n  ngOnDestroy() {\n    this.clearTimeout();\n  }\n\n}\n\nToastItem.ɵfac = function ToastItem_Factory(t) {\n  return new (t || ToastItem)(i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nToastItem.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ToastItem,\n  selectors: [[\"p-toastItem\"]],\n  viewQuery: function ToastItem_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    message: \"message\",\n    index: \"index\",\n    template: \"template\",\n    showTransformOptions: \"showTransformOptions\",\n    hideTransformOptions: \"hideTransformOptions\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\"\n  },\n  outputs: {\n    onClose: \"onClose\"\n  },\n  decls: 6,\n  vars: 21,\n  consts: [[3, \"ngClass\", \"mouseenter\", \"mouseleave\"], [\"container\", \"\"], [\"role\", \"alert\", \"aria-live\", \"assertive\", \"aria-atomic\", \"true\", 1, \"p-toast-message-content\", 3, \"ngClass\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"type\", \"button\", \"class\", \"p-toast-icon-close p-link\", \"pRipple\", \"\", 3, \"click\", \"keydown.enter\", 4, \"ngIf\"], [3, \"ngClass\"], [1, \"p-toast-message-text\"], [1, \"p-toast-summary\"], [1, \"p-toast-detail\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-toast-icon-close\", \"p-link\", 3, \"click\", \"keydown.enter\"], [1, \"p-toast-icon-close-icon\", \"pi\", \"pi-times\"]],\n  template: function ToastItem_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵlistener(\"mouseenter\", function ToastItem_Template_div_mouseenter_0_listener() {\n        return ctx.onMouseEnter();\n      })(\"mouseleave\", function ToastItem_Template_div_mouseleave_0_listener() {\n        return ctx.onMouseLeave();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵtemplate(3, ToastItem_ng_container_3_Template, 7, 10, \"ng-container\", 3);\n      i0.ɵɵtemplate(4, ToastItem_ng_container_4_Template, 1, 0, \"ng-container\", 4);\n      i0.ɵɵtemplate(5, ToastItem_button_5_Template, 2, 0, \"button\", 5);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.message.styleClass);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c2, \"p-toast-message-\" + ctx.message.severity))(\"@messageState\", i0.ɵɵpureFunction1(17, _c4, i0.ɵɵpureFunction4(12, _c3, ctx.showTransformOptions, ctx.hideTransformOptions, ctx.showTransitionOptions, ctx.hideTransitionOptions)));\n      i0.ɵɵattribute(\"id\", ctx.message.id);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", ctx.message.contentStyleClass);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.template);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(19, _c5, ctx.message));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message.closable !== false);\n    }\n  },\n  directives: [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i2.Ripple],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('messageState', [state('visible', style({\n      transform: 'translateY(0)',\n      opacity: 1\n    })), transition('void => *', [style({\n      transform: '{{showTransformParams}}',\n      opacity: 0\n    }), animate('{{showTransitionParams}}')]), transition('* => void', [animate('{{hideTransitionParams}}', style({\n      height: 0,\n      opacity: 0,\n      transform: '{{hideTransformParams}}'\n    }))])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastItem, [{\n    type: Component,\n    args: [{\n      selector: 'p-toastItem',\n      template: `\n        <div #container [attr.id]=\"message.id\" [class]=\"message.styleClass\" [ngClass]=\"['p-toast-message-' + message.severity, 'p-toast-message']\" [@messageState]=\"{value: 'visible', params: {showTransformParams: showTransformOptions, hideTransformParams: hideTransformOptions, showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\"\n                (mouseenter)=\"onMouseEnter()\" (mouseleave)=\"onMouseLeave()\">\n            <div class=\"p-toast-message-content\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"  [ngClass]=\"message.contentStyleClass\">\n                <ng-container *ngIf=\"!template\">\n                    <span [class]=\"'p-toast-message-icon pi' + (message.icon ? ' ' + message.icon : '')\" [ngClass]=\"{'pi-info-circle': message.severity == 'info', 'pi-exclamation-triangle': message.severity == 'warn',\n                        'pi-times-circle': message.severity == 'error', 'pi-check' :message.severity == 'success'}\"></span>\n                    <div class=\"p-toast-message-text\">\n                        <div class=\"p-toast-summary\">{{message.summary}}</div>\n                        <div class=\"p-toast-detail\">{{message.detail}}</div>\n                    </div>\n                </ng-container>\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: message}\"></ng-container>\n                <button type=\"button\" class=\"p-toast-icon-close p-link\" (click)=\"onCloseIconClick($event)\" (keydown.enter)=\"onCloseIconClick($event)\" *ngIf=\"message.closable !== false\" pRipple>\n                    <span class=\"p-toast-icon-close-icon pi pi-times\"></span>\n                </button>\n            </div>\n        </div>\n    `,\n      animations: [trigger('messageState', [state('visible', style({\n        transform: 'translateY(0)',\n        opacity: 1\n      })), transition('void => *', [style({\n        transform: '{{showTransformParams}}',\n        opacity: 0\n      }), animate('{{showTransitionParams}}')]), transition('* => void', [animate('{{hideTransitionParams}}', style({\n        height: 0,\n        opacity: 0,\n        transform: '{{hideTransformParams}}'\n      }))])])],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }];\n  }, {\n    message: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    showTransformOptions: [{\n      type: Input\n    }],\n    hideTransformOptions: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    onClose: [{\n      type: Output\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container']\n    }]\n  });\n})();\n\nclass Toast {\n  constructor(messageService, cd, config) {\n    this.messageService = messageService;\n    this.cd = cd;\n    this.config = config;\n    this.autoZIndex = true;\n    this.baseZIndex = 0;\n    this.position = 'top-right';\n    this.preventOpenDuplicates = false;\n    this.preventDuplicates = false;\n    this.showTransformOptions = 'translateY(100%)';\n    this.hideTransformOptions = 'translateY(-100%)';\n    this.showTransitionOptions = '300ms ease-out';\n    this.hideTransitionOptions = '250ms ease-in';\n    this.onClose = new EventEmitter();\n    this.id = UniqueComponentId();\n  }\n\n  ngOnInit() {\n    this.messageSubscription = this.messageService.messageObserver.subscribe(messages => {\n      if (messages) {\n        if (messages instanceof Array) {\n          const filteredMessages = messages.filter(m => this.canAdd(m));\n          this.add(filteredMessages);\n        } else if (this.canAdd(messages)) {\n          this.add([messages]);\n        }\n      }\n    });\n    this.clearSubscription = this.messageService.clearObserver.subscribe(key => {\n      if (key) {\n        if (this.key === key) {\n          this.messages = null;\n        }\n      } else {\n        this.messages = null;\n      }\n\n      this.cd.markForCheck();\n    });\n  }\n\n  ngAfterViewInit() {\n    if (this.breakpoints) {\n      this.createStyle();\n    }\n  }\n\n  add(messages) {\n    this.messages = this.messages ? [...this.messages, ...messages] : [...messages];\n\n    if (this.preventDuplicates) {\n      this.messagesArchieve = this.messagesArchieve ? [...this.messagesArchieve, ...messages] : [...messages];\n    }\n\n    this.cd.markForCheck();\n  }\n\n  canAdd(message) {\n    let allow = this.key === message.key;\n\n    if (allow && this.preventOpenDuplicates) {\n      allow = !this.containsMessage(this.messages, message);\n    }\n\n    if (allow && this.preventDuplicates) {\n      allow = !this.containsMessage(this.messagesArchieve, message);\n    }\n\n    return allow;\n  }\n\n  containsMessage(collection, message) {\n    if (!collection) {\n      return false;\n    }\n\n    return collection.find(m => {\n      return m.summary === message.summary && m.detail == message.detail && m.severity === message.severity;\n    }) != null;\n  }\n\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'message':\n          this.template = item.template;\n          break;\n\n        default:\n          this.template = item.template;\n          break;\n      }\n    });\n  }\n\n  onMessageClose(event) {\n    this.messages.splice(event.index, 1);\n    this.onClose.emit({\n      message: event.message\n    });\n    this.cd.detectChanges();\n  }\n\n  onAnimationStart(event) {\n    if (event.fromState === 'void') {\n      this.containerViewChild.nativeElement.setAttribute(this.id, '');\n\n      if (this.autoZIndex) {\n        ZIndexUtils.set('modal', this.containerViewChild.nativeElement, this.baseZIndex || this.config.zIndex.modal);\n      }\n    }\n  }\n\n  onAnimationEnd(event) {\n    if (event.toState === 'void') {\n      if (this.autoZIndex && ObjectUtils.isEmpty(this.messages)) {\n        ZIndexUtils.clear(this.containerViewChild.nativeElement);\n      }\n    }\n  }\n\n  createStyle() {\n    if (!this.styleElement) {\n      this.styleElement = document.createElement('style');\n      this.styleElement.type = 'text/css';\n      document.head.appendChild(this.styleElement);\n      let innerHTML = '';\n\n      for (let breakpoint in this.breakpoints) {\n        let breakpointStyle = '';\n\n        for (let styleProp in this.breakpoints[breakpoint]) {\n          breakpointStyle += styleProp + ':' + this.breakpoints[breakpoint][styleProp] + ' !important;';\n        }\n\n        innerHTML += `\n                    @media screen and (max-width: ${breakpoint}) {\n                        .p-toast[${this.id}] {\n                           ${breakpointStyle}\n                        }\n                    }\n                `;\n      }\n\n      this.styleElement.innerHTML = innerHTML;\n    }\n  }\n\n  destroyStyle() {\n    if (this.styleElement) {\n      document.head.removeChild(this.styleElement);\n      this.styleElement = null;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.messageSubscription) {\n      this.messageSubscription.unsubscribe();\n    }\n\n    if (this.containerViewChild && this.autoZIndex) {\n      ZIndexUtils.clear(this.containerViewChild.nativeElement);\n    }\n\n    if (this.clearSubscription) {\n      this.clearSubscription.unsubscribe();\n    }\n\n    this.destroyStyle();\n  }\n\n}\n\nToast.ɵfac = function Toast_Factory(t) {\n  return new (t || Toast)(i0.ɵɵdirectiveInject(i3.MessageService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3.PrimeNGConfig));\n};\n\nToast.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: Toast,\n  selectors: [[\"p-toast\"]],\n  contentQueries: function Toast_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function Toast_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    key: \"key\",\n    autoZIndex: \"autoZIndex\",\n    baseZIndex: \"baseZIndex\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    position: \"position\",\n    preventOpenDuplicates: \"preventOpenDuplicates\",\n    preventDuplicates: \"preventDuplicates\",\n    showTransformOptions: \"showTransformOptions\",\n    hideTransformOptions: \"hideTransformOptions\",\n    showTransitionOptions: \"showTransitionOptions\",\n    hideTransitionOptions: \"hideTransitionOptions\",\n    breakpoints: \"breakpoints\"\n  },\n  outputs: {\n    onClose: \"onClose\"\n  },\n  decls: 3,\n  vars: 5,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [3, \"message\", \"index\", \"template\", \"showTransformOptions\", \"hideTransformOptions\", \"showTransitionOptions\", \"hideTransitionOptions\", \"onClose\", 4, \"ngFor\", \"ngForOf\"], [3, \"message\", \"index\", \"template\", \"showTransformOptions\", \"hideTransformOptions\", \"showTransitionOptions\", \"hideTransitionOptions\", \"onClose\"]],\n  template: function Toast_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, Toast_p_toastItem_2_Template, 1, 8, \"p-toastItem\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", \"p-toast p-component p-toast-\" + ctx.position)(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n    }\n  },\n  directives: [ToastItem, i1.NgClass, i1.NgStyle, i1.NgForOf],\n  styles: [\".p-toast{position:fixed;width:25rem}.p-toast-message{overflow:hidden}.p-toast-message-content{display:flex;align-items:flex-start}.p-toast-message-text{flex:1 1 auto}.p-toast-top-right{top:20px;right:20px}.p-toast-top-left{top:20px;left:20px}.p-toast-bottom-left{bottom:20px;left:20px}.p-toast-bottom-right{bottom:20px;right:20px}.p-toast-top-center{top:20px;left:50%;transform:translate(-50%)}.p-toast-bottom-center{bottom:20px;left:50%;transform:translate(-50%)}.p-toast-center{left:50%;top:50%;min-width:20vw;transform:translate(-50%,-50%)}.p-toast-icon-close{display:flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-toast-icon-close.p-link{cursor:pointer}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('toastAnimation', [transition(':enter, :leave', [query('@*', animateChild())])])]\n  },\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Toast, [{\n    type: Component,\n    args: [{\n      selector: 'p-toast',\n      template: `\n        <div #container [ngClass]=\"'p-toast p-component p-toast-' + position\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <p-toastItem *ngFor=\"let msg of messages; let i=index\" [message]=\"msg\" [index]=\"i\" (onClose)=\"onMessageClose($event)\"\n                    [template]=\"template\" @toastAnimation (@toastAnimation.start)=\"onAnimationStart($event)\" (@toastAnimation.done)=\"onAnimationEnd($event)\"\n                    [showTransformOptions]=\"showTransformOptions\" [hideTransformOptions]=\"hideTransformOptions\"\n                    [showTransitionOptions]=\"showTransitionOptions\" [hideTransitionOptions]=\"hideTransitionOptions\"></p-toastItem>\n        </div>\n    `,\n      animations: [trigger('toastAnimation', [transition(':enter, :leave', [query('@*', animateChild())])])],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'class': 'p-element'\n      },\n      styles: [\".p-toast{position:fixed;width:25rem}.p-toast-message{overflow:hidden}.p-toast-message-content{display:flex;align-items:flex-start}.p-toast-message-text{flex:1 1 auto}.p-toast-top-right{top:20px;right:20px}.p-toast-top-left{top:20px;left:20px}.p-toast-bottom-left{bottom:20px;left:20px}.p-toast-bottom-right{bottom:20px;right:20px}.p-toast-top-center{top:20px;left:50%;transform:translate(-50%)}.p-toast-bottom-center{bottom:20px;left:50%;transform:translate(-50%)}.p-toast-center{left:50%;top:50%;min-width:20vw;transform:translate(-50%,-50%)}.p-toast-icon-close{display:flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-toast-icon-close.p-link{cursor:pointer}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i3.MessageService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i3.PrimeNGConfig\n    }];\n  }, {\n    key: [{\n      type: Input\n    }],\n    autoZIndex: [{\n      type: Input\n    }],\n    baseZIndex: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    preventOpenDuplicates: [{\n      type: Input\n    }],\n    preventDuplicates: [{\n      type: Input\n    }],\n    showTransformOptions: [{\n      type: Input\n    }],\n    hideTransformOptions: [{\n      type: Input\n    }],\n    showTransitionOptions: [{\n      type: Input\n    }],\n    hideTransitionOptions: [{\n      type: Input\n    }],\n    breakpoints: [{\n      type: Input\n    }],\n    onClose: [{\n      type: Output\n    }],\n    containerViewChild: [{\n      type: ViewChild,\n      args: ['container']\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }]\n  });\n})();\n\nclass ToastModule {}\n\nToastModule.ɵfac = function ToastModule_Factory(t) {\n  return new (t || ToastModule)();\n};\n\nToastModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ToastModule\n});\nToastModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, RippleModule], SharedModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToastModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, RippleModule],\n      exports: [Toast, SharedModule],\n      declarations: [Toast, ToastItem]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Toast, ToastItem, ToastModule };","map":{"version":3,"sources":["/Users/sridhar/Desktop/thesis_cs_msc_Karra_Sridhar/Source Code/Tetris---Frontend-Code/node_modules/primeng/fesm2015/primeng-toast.mjs"],"names":["i0","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","Output","ViewChild","ContentChildren","NgModule","i1","CommonModule","i3","PrimeTemplate","SharedModule","UniqueComponentId","ZIndexUtils","ObjectUtils","i2","RippleModule","trigger","state","style","transition","animate","query","animateChild","ToastItem","constructor","zone","onClose","ngAfterViewInit","initTimeout","message","sticky","runOutsideAngular","timeout","setTimeout","emit","index","life","clearTimeout","onMouseEnter","onMouseLeave","onCloseIconClick","event","preventDefault","ngOnDestroy","ɵfac","NgZone","ɵcmp","NgClass","NgIf","NgTemplateOutlet","Ripple","transform","opacity","height","type","args","selector","template","animations","encapsulation","None","changeDetection","OnPush","host","showTransformOptions","hideTransformOptions","showTransitionOptions","hideTransitionOptions","containerViewChild","Toast","messageService","cd","config","autoZIndex","baseZIndex","position","preventOpenDuplicates","preventDuplicates","id","ngOnInit","messageSubscription","messageObserver","subscribe","messages","Array","filteredMessages","filter","m","canAdd","add","clearSubscription","clearObserver","key","markForCheck","breakpoints","createStyle","messagesArchieve","allow","containsMessage","collection","find","summary","detail","severity","ngAfterContentInit","templates","forEach","item","getType","onMessageClose","splice","detectChanges","onAnimationStart","fromState","nativeElement","setAttribute","set","zIndex","modal","onAnimationEnd","toState","isEmpty","clear","styleElement","document","createElement","head","appendChild","innerHTML","breakpoint","breakpointStyle","styleProp","destroyStyle","removeChild","unsubscribe","MessageService","ChangeDetectorRef","PrimeNGConfig","NgStyle","NgForOf","styles","styleClass","ToastModule","ɵmod","ɵinj","imports","exports","declarations"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'primeng/api';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { UniqueComponentId, ZIndexUtils, ObjectUtils } from 'primeng/utils';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { trigger, state, style, transition, animate, query, animateChild } from '@angular/animations';\n\nclass ToastItem {\n    constructor(zone) {\n        this.zone = zone;\n        this.onClose = new EventEmitter();\n    }\n    ngAfterViewInit() {\n        this.initTimeout();\n    }\n    initTimeout() {\n        if (!this.message.sticky) {\n            this.zone.runOutsideAngular(() => {\n                this.timeout = setTimeout(() => {\n                    this.onClose.emit({\n                        index: this.index,\n                        message: this.message\n                    });\n                }, this.message.life || 3000);\n            });\n        }\n    }\n    clearTimeout() {\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n            this.timeout = null;\n        }\n    }\n    onMouseEnter() {\n        this.clearTimeout();\n    }\n    onMouseLeave() {\n        this.initTimeout();\n    }\n    onCloseIconClick(event) {\n        this.clearTimeout();\n        this.onClose.emit({\n            index: this.index,\n            message: this.message\n        });\n        event.preventDefault();\n    }\n    ngOnDestroy() {\n        this.clearTimeout();\n    }\n}\nToastItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ToastItem, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nToastItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: ToastItem, selector: \"p-toastItem\", inputs: { message: \"message\", index: \"index\", template: \"template\", showTransformOptions: \"showTransformOptions\", hideTransformOptions: \"hideTransformOptions\", showTransitionOptions: \"showTransitionOptions\", hideTransitionOptions: \"hideTransitionOptions\" }, outputs: { onClose: \"onClose\" }, host: { classAttribute: \"p-element\" }, viewQueries: [{ propertyName: \"containerViewChild\", first: true, predicate: [\"container\"], descendants: true }], ngImport: i0, template: `\n        <div #container [attr.id]=\"message.id\" [class]=\"message.styleClass\" [ngClass]=\"['p-toast-message-' + message.severity, 'p-toast-message']\" [@messageState]=\"{value: 'visible', params: {showTransformParams: showTransformOptions, hideTransformParams: hideTransformOptions, showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\"\n                (mouseenter)=\"onMouseEnter()\" (mouseleave)=\"onMouseLeave()\">\n            <div class=\"p-toast-message-content\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"  [ngClass]=\"message.contentStyleClass\">\n                <ng-container *ngIf=\"!template\">\n                    <span [class]=\"'p-toast-message-icon pi' + (message.icon ? ' ' + message.icon : '')\" [ngClass]=\"{'pi-info-circle': message.severity == 'info', 'pi-exclamation-triangle': message.severity == 'warn',\n                        'pi-times-circle': message.severity == 'error', 'pi-check' :message.severity == 'success'}\"></span>\n                    <div class=\"p-toast-message-text\">\n                        <div class=\"p-toast-summary\">{{message.summary}}</div>\n                        <div class=\"p-toast-detail\">{{message.detail}}</div>\n                    </div>\n                </ng-container>\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: message}\"></ng-container>\n                <button type=\"button\" class=\"p-toast-icon-close p-link\" (click)=\"onCloseIconClick($event)\" (keydown.enter)=\"onCloseIconClick($event)\" *ngIf=\"message.closable !== false\" pRipple>\n                    <span class=\"p-toast-icon-close-icon pi pi-times\"></span>\n                </button>\n            </div>\n        </div>\n    `, isInline: true, directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i2.Ripple, selector: \"[pRipple]\" }], animations: [\n        trigger('messageState', [\n            state('visible', style({\n                transform: 'translateY(0)',\n                opacity: 1\n            })),\n            transition('void => *', [\n                style({ transform: '{{showTransformParams}}', opacity: 0 }),\n                animate('{{showTransitionParams}}')\n            ]),\n            transition('* => void', [\n                animate(('{{hideTransitionParams}}'), style({\n                    height: 0,\n                    opacity: 0,\n                    transform: '{{hideTransformParams}}'\n                }))\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ToastItem, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-toastItem',\n                    template: `\n        <div #container [attr.id]=\"message.id\" [class]=\"message.styleClass\" [ngClass]=\"['p-toast-message-' + message.severity, 'p-toast-message']\" [@messageState]=\"{value: 'visible', params: {showTransformParams: showTransformOptions, hideTransformParams: hideTransformOptions, showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\"\n                (mouseenter)=\"onMouseEnter()\" (mouseleave)=\"onMouseLeave()\">\n            <div class=\"p-toast-message-content\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\"  [ngClass]=\"message.contentStyleClass\">\n                <ng-container *ngIf=\"!template\">\n                    <span [class]=\"'p-toast-message-icon pi' + (message.icon ? ' ' + message.icon : '')\" [ngClass]=\"{'pi-info-circle': message.severity == 'info', 'pi-exclamation-triangle': message.severity == 'warn',\n                        'pi-times-circle': message.severity == 'error', 'pi-check' :message.severity == 'success'}\"></span>\n                    <div class=\"p-toast-message-text\">\n                        <div class=\"p-toast-summary\">{{message.summary}}</div>\n                        <div class=\"p-toast-detail\">{{message.detail}}</div>\n                    </div>\n                </ng-container>\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: message}\"></ng-container>\n                <button type=\"button\" class=\"p-toast-icon-close p-link\" (click)=\"onCloseIconClick($event)\" (keydown.enter)=\"onCloseIconClick($event)\" *ngIf=\"message.closable !== false\" pRipple>\n                    <span class=\"p-toast-icon-close-icon pi pi-times\"></span>\n                </button>\n            </div>\n        </div>\n    `,\n                    animations: [\n                        trigger('messageState', [\n                            state('visible', style({\n                                transform: 'translateY(0)',\n                                opacity: 1\n                            })),\n                            transition('void => *', [\n                                style({ transform: '{{showTransformParams}}', opacity: 0 }),\n                                animate('{{showTransitionParams}}')\n                            ]),\n                            transition('* => void', [\n                                animate(('{{hideTransitionParams}}'), style({\n                                    height: 0,\n                                    opacity: 0,\n                                    transform: '{{hideTransformParams}}'\n                                }))\n                            ])\n                        ])\n                    ],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; }, propDecorators: { message: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], showTransformOptions: [{\n                type: Input\n            }], hideTransformOptions: [{\n                type: Input\n            }], showTransitionOptions: [{\n                type: Input\n            }], hideTransitionOptions: [{\n                type: Input\n            }], onClose: [{\n                type: Output\n            }], containerViewChild: [{\n                type: ViewChild,\n                args: ['container']\n            }] } });\nclass Toast {\n    constructor(messageService, cd, config) {\n        this.messageService = messageService;\n        this.cd = cd;\n        this.config = config;\n        this.autoZIndex = true;\n        this.baseZIndex = 0;\n        this.position = 'top-right';\n        this.preventOpenDuplicates = false;\n        this.preventDuplicates = false;\n        this.showTransformOptions = 'translateY(100%)';\n        this.hideTransformOptions = 'translateY(-100%)';\n        this.showTransitionOptions = '300ms ease-out';\n        this.hideTransitionOptions = '250ms ease-in';\n        this.onClose = new EventEmitter();\n        this.id = UniqueComponentId();\n    }\n    ngOnInit() {\n        this.messageSubscription = this.messageService.messageObserver.subscribe(messages => {\n            if (messages) {\n                if (messages instanceof Array) {\n                    const filteredMessages = messages.filter(m => this.canAdd(m));\n                    this.add(filteredMessages);\n                }\n                else if (this.canAdd(messages)) {\n                    this.add([messages]);\n                }\n            }\n        });\n        this.clearSubscription = this.messageService.clearObserver.subscribe(key => {\n            if (key) {\n                if (this.key === key) {\n                    this.messages = null;\n                }\n            }\n            else {\n                this.messages = null;\n            }\n            this.cd.markForCheck();\n        });\n    }\n    ngAfterViewInit() {\n        if (this.breakpoints) {\n            this.createStyle();\n        }\n    }\n    add(messages) {\n        this.messages = this.messages ? [...this.messages, ...messages] : [...messages];\n        if (this.preventDuplicates) {\n            this.messagesArchieve = this.messagesArchieve ? [...this.messagesArchieve, ...messages] : [...messages];\n        }\n        this.cd.markForCheck();\n    }\n    canAdd(message) {\n        let allow = this.key === message.key;\n        if (allow && this.preventOpenDuplicates) {\n            allow = !this.containsMessage(this.messages, message);\n        }\n        if (allow && this.preventDuplicates) {\n            allow = !this.containsMessage(this.messagesArchieve, message);\n        }\n        return allow;\n    }\n    containsMessage(collection, message) {\n        if (!collection) {\n            return false;\n        }\n        return collection.find(m => {\n            return ((m.summary === message.summary) && (m.detail == message.detail) && (m.severity === message.severity));\n        }) != null;\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'message':\n                    this.template = item.template;\n                    break;\n                default:\n                    this.template = item.template;\n                    break;\n            }\n        });\n    }\n    onMessageClose(event) {\n        this.messages.splice(event.index, 1);\n        this.onClose.emit({\n            message: event.message\n        });\n        this.cd.detectChanges();\n    }\n    onAnimationStart(event) {\n        if (event.fromState === 'void') {\n            this.containerViewChild.nativeElement.setAttribute(this.id, '');\n            if (this.autoZIndex) {\n                ZIndexUtils.set('modal', this.containerViewChild.nativeElement, this.baseZIndex || this.config.zIndex.modal);\n            }\n        }\n    }\n    onAnimationEnd(event) {\n        if (event.toState === 'void') {\n            if (this.autoZIndex && ObjectUtils.isEmpty(this.messages)) {\n                ZIndexUtils.clear(this.containerViewChild.nativeElement);\n            }\n        }\n    }\n    createStyle() {\n        if (!this.styleElement) {\n            this.styleElement = document.createElement('style');\n            this.styleElement.type = 'text/css';\n            document.head.appendChild(this.styleElement);\n            let innerHTML = '';\n            for (let breakpoint in this.breakpoints) {\n                let breakpointStyle = '';\n                for (let styleProp in this.breakpoints[breakpoint]) {\n                    breakpointStyle += styleProp + ':' + this.breakpoints[breakpoint][styleProp] + ' !important;';\n                }\n                innerHTML += `\n                    @media screen and (max-width: ${breakpoint}) {\n                        .p-toast[${this.id}] {\n                           ${breakpointStyle}\n                        }\n                    }\n                `;\n            }\n            this.styleElement.innerHTML = innerHTML;\n        }\n    }\n    destroyStyle() {\n        if (this.styleElement) {\n            document.head.removeChild(this.styleElement);\n            this.styleElement = null;\n        }\n    }\n    ngOnDestroy() {\n        if (this.messageSubscription) {\n            this.messageSubscription.unsubscribe();\n        }\n        if (this.containerViewChild && this.autoZIndex) {\n            ZIndexUtils.clear(this.containerViewChild.nativeElement);\n        }\n        if (this.clearSubscription) {\n            this.clearSubscription.unsubscribe();\n        }\n        this.destroyStyle();\n    }\n}\nToast.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: Toast, deps: [{ token: i3.MessageService }, { token: i0.ChangeDetectorRef }, { token: i3.PrimeNGConfig }], target: i0.ɵɵFactoryTarget.Component });\nToast.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.7\", type: Toast, selector: \"p-toast\", inputs: { key: \"key\", autoZIndex: \"autoZIndex\", baseZIndex: \"baseZIndex\", style: \"style\", styleClass: \"styleClass\", position: \"position\", preventOpenDuplicates: \"preventOpenDuplicates\", preventDuplicates: \"preventDuplicates\", showTransformOptions: \"showTransformOptions\", hideTransformOptions: \"hideTransformOptions\", showTransitionOptions: \"showTransitionOptions\", hideTransitionOptions: \"hideTransitionOptions\", breakpoints: \"breakpoints\" }, outputs: { onClose: \"onClose\" }, host: { classAttribute: \"p-element\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"containerViewChild\", first: true, predicate: [\"container\"], descendants: true }], ngImport: i0, template: `\n        <div #container [ngClass]=\"'p-toast p-component p-toast-' + position\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <p-toastItem *ngFor=\"let msg of messages; let i=index\" [message]=\"msg\" [index]=\"i\" (onClose)=\"onMessageClose($event)\"\n                    [template]=\"template\" @toastAnimation (@toastAnimation.start)=\"onAnimationStart($event)\" (@toastAnimation.done)=\"onAnimationEnd($event)\"\n                    [showTransformOptions]=\"showTransformOptions\" [hideTransformOptions]=\"hideTransformOptions\"\n                    [showTransitionOptions]=\"showTransitionOptions\" [hideTransitionOptions]=\"hideTransitionOptions\"></p-toastItem>\n        </div>\n    `, isInline: true, styles: [\".p-toast{position:fixed;width:25rem}.p-toast-message{overflow:hidden}.p-toast-message-content{display:flex;align-items:flex-start}.p-toast-message-text{flex:1 1 auto}.p-toast-top-right{top:20px;right:20px}.p-toast-top-left{top:20px;left:20px}.p-toast-bottom-left{bottom:20px;left:20px}.p-toast-bottom-right{bottom:20px;right:20px}.p-toast-top-center{top:20px;left:50%;transform:translate(-50%)}.p-toast-bottom-center{bottom:20px;left:50%;transform:translate(-50%)}.p-toast-center{left:50%;top:50%;min-width:20vw;transform:translate(-50%,-50%)}.p-toast-icon-close{display:flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-toast-icon-close.p-link{cursor:pointer}\\n\"], components: [{ type: ToastItem, selector: \"p-toastItem\", inputs: [\"message\", \"index\", \"template\", \"showTransformOptions\", \"hideTransformOptions\", \"showTransitionOptions\", \"hideTransitionOptions\"], outputs: [\"onClose\"] }], directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], animations: [\n        trigger('toastAnimation', [\n            transition(':enter, :leave', [\n                query('@*', animateChild())\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: Toast, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-toast', template: `\n        <div #container [ngClass]=\"'p-toast p-component p-toast-' + position\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <p-toastItem *ngFor=\"let msg of messages; let i=index\" [message]=\"msg\" [index]=\"i\" (onClose)=\"onMessageClose($event)\"\n                    [template]=\"template\" @toastAnimation (@toastAnimation.start)=\"onAnimationStart($event)\" (@toastAnimation.done)=\"onAnimationEnd($event)\"\n                    [showTransformOptions]=\"showTransformOptions\" [hideTransformOptions]=\"hideTransformOptions\"\n                    [showTransitionOptions]=\"showTransitionOptions\" [hideTransitionOptions]=\"hideTransitionOptions\"></p-toastItem>\n        </div>\n    `, animations: [\n                        trigger('toastAnimation', [\n                            transition(':enter, :leave', [\n                                query('@*', animateChild())\n                            ])\n                        ])\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        'class': 'p-element'\n                    }, styles: [\".p-toast{position:fixed;width:25rem}.p-toast-message{overflow:hidden}.p-toast-message-content{display:flex;align-items:flex-start}.p-toast-message-text{flex:1 1 auto}.p-toast-top-right{top:20px;right:20px}.p-toast-top-left{top:20px;left:20px}.p-toast-bottom-left{bottom:20px;left:20px}.p-toast-bottom-right{bottom:20px;right:20px}.p-toast-top-center{top:20px;left:50%;transform:translate(-50%)}.p-toast-bottom-center{bottom:20px;left:50%;transform:translate(-50%)}.p-toast-center{left:50%;top:50%;min-width:20vw;transform:translate(-50%,-50%)}.p-toast-icon-close{display:flex;align-items:center;justify-content:center;overflow:hidden;position:relative}.p-toast-icon-close.p-link{cursor:pointer}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i3.MessageService }, { type: i0.ChangeDetectorRef }, { type: i3.PrimeNGConfig }]; }, propDecorators: { key: [{\n                type: Input\n            }], autoZIndex: [{\n                type: Input\n            }], baseZIndex: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], preventOpenDuplicates: [{\n                type: Input\n            }], preventDuplicates: [{\n                type: Input\n            }], showTransformOptions: [{\n                type: Input\n            }], hideTransformOptions: [{\n                type: Input\n            }], showTransitionOptions: [{\n                type: Input\n            }], hideTransitionOptions: [{\n                type: Input\n            }], breakpoints: [{\n                type: Input\n            }], onClose: [{\n                type: Output\n            }], containerViewChild: [{\n                type: ViewChild,\n                args: ['container']\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }] } });\nclass ToastModule {\n}\nToastModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ToastModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nToastModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ToastModule, declarations: [Toast, ToastItem], imports: [CommonModule, RippleModule], exports: [Toast, SharedModule] });\nToastModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ToastModule, imports: [[CommonModule, RippleModule], SharedModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.7\", ngImport: i0, type: ToastModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, RippleModule],\n                    exports: [Toast, SharedModule],\n                    declarations: [Toast, ToastItem]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Toast, ToastItem, ToastModule };\n"]},"metadata":{},"sourceType":"module"}